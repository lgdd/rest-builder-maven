openapi: 3.0.1
info:
  description: "Headless Todo REST API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "Headless Todo"
  version: v1.0
components:
  schemas:
    Todo:
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        title:
          type: string
        status:
          type: string
          enum:
            - "todo"
            - "doing"
            - "done"
    Error:
      properties:
        errorCode:
          description: Internal error code mapping
          readOnly: true
          type: integer
        errorDescription:
          readOnly: true
          type: string
        message:
          readOnly: true
          type: string
        status:
          description: HTTP Status code
          readOnly: true
          type: integer
      required:
        - errorCode
        - errorDescription
        - message
        - status
      type: object
  responses:
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
    UnauthorizedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Authentication information is missing or invalid
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
    BearerAuth:
      scheme: bearer
      type: http
    OAuth2:
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          scopes:
            Todo.read: Grants read access
            Todo.write: Grants write access
          tokenUrl: /oauth/token
      type: oauth2
paths:
  /todos:
    get:
      operationId: getTodosPage
      parameters:
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: sort
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Todo'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Todo'
                type: array
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication information is missing or invalid
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
        - BasicAuth: [ ]
        - BearerAuth: [ ]
        - OAuth2:
            - Todo.read
      summary: Find Todos
      tags:
        - Todo
    post:
      operationId: postTodo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
          application/xml:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo'
        202:
          description: Async
        204:
          description: Updated
        400:
          description: Invalid input
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication information is missing or invalid
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
        - BasicAuth: [ ]
        - BearerAuth: [ ]
        - OAuth2: [ Todo.write ]
      summary: Creates a Todo
      tags:
        - Todo
  /todos/{todoId}:
    delete:
      operationId: deleteTodo
      parameters:
        - in: path
          name: todoId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          description: Successfully deleted
          content:
            text/plain:
              schema:
                type: string
        204:
          description: No content
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication information is missing or invalid
      security:
        - BasicAuth: [ ]
        - BearerAuth: [ ]
        - OAuth2:
            - Todo.write
      summary: Deletes a Todo by ID
      tags:
        - Todo
    get:
      operationId: getTodo
      parameters:
        - in: path
          name: todoId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo'
          description: Successful operation
        400:
          description: Invalid input
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication information is missing or invalid
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
        - BasicAuth: [ ]
        - BearerAuth: [ ]
        - OAuth2:
            - Todo.read
      summary: Gets a Todo by ID
      tags:
        - Todo
    put:
      operationId: putTodo
      parameters:
        - in: path
          name: todoId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
          application/xml:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Todo'
        202:
          description: Async
        400:
          description: Invalid input
        401:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication information is missing or invalid
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: The specified resource was not found
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
        - BasicAuth: [ ]
        - BearerAuth: [ ]
        - OAuth2:
            - Todo.write
      summary: Updates a Todo by ID
      tags:
        - Todo
